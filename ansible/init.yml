---
- name: Init configuration
  hosts: localhost

  vars_files:
    - _vars_base.yml
    - '{{ repo_root_path }}/default.pkgs.yml'

  pre_tasks:
    - name: Preparatory steps
      block:
        - name: Include pkgs list
          include_vars: '{{ item }}'
          with_fileglob:
            - '{{ repo_root_path }}/pkgs.yml'
      tags: prepare

  tasks:
    - block:
        - name: Configure dnf
          block:
            - name: Apply dnf config
              blockinfile:
                block: "{{ lookup('file', '{{ system_conf_path }}/dnf.conf') }}"
                path: /etc/dnf/dnf.conf
            - name: Disable OpenH264 repo
              shell:
                cmd: |
                  dnf config-manager --set-disabled fedora-cisco-openh264
                  dnf clean all
            - name: Install RPMFusion repo
              dnf:
                name:
                  - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm
                  - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm
                state: latest
                update_cache: true
                install_weak_deps: false
                disable_gpg_check: true

        - name: Install firmware
          block:
            - name: Install base firmware pkgs
              dnf:
                name: '{{ fedora_firmware_pkgs }}'
                state: latest
                update_cache: true
                install_weak_deps: false

            - name: Install AMD firmware pkgs
              dnf:
                name: '{{ fedora_amd_firmware_pkgs }}'
                state: latest
                update_cache: true
                install_weak_deps: false
              when: "'AuthenticAMD' in ansible_processor"

            - name: Install Intel firmware pkgs
              dnf:
                name: '{{ fedora_intel_firmware_pkgs }}'
                state: latest
                update_cache: true
                install_weak_deps: false
              when: "'GenuineIntel' in ansible_processor"

            - name: Warning for unsupported platform
              debug:
                msg: 'Platform: {{ ansible_processor[1] }} is not supported.'
              when: "'AuthenticAMD' not in ansible_processor and 'GenuineIntel' not in ansible_processor"

        - name: Install core pkgs
          dnf:
            name: '{{ fedora_core_pkgs }}'
            state: latest
            update_cache: true
            install_weak_deps: false

        - name: Base configuration
          block:
            - name: Enable gdm
              systemd:
                name: gdm
                enabled: true
            - name: Set graphical.target
              command:
                cmd: systemctl set-default graphical.target
            - name: Set plymouth theme
              command:
                cmd: plymouth-set-default-theme bgrt --rebuild-initrd
            - name: Hide grub on startup
              shell:
                cmd: |
                  grub2-editenv - set menu_auto_hide=1
                  grub2-mkconfig -o /boot/grub2/grub.cfg

        - name: Install base pkgs
          dnf:
            name: '{{ fedora_base_pkgs }}'
            state: latest
            update_cache: true
            install_weak_deps: false

        - name: Make nested BTRFS volumes
          script:
            cmd: '{{ script_path }}/_make_btrfs_subvols.sh {{ item }}'
          environment:
            BACKUP_PATH: '{{ backup_path }}'
          become: false
          with_items: ['{{ home_path }}/.var var']

      become: true
      when: ansible_distribution=="Fedora"
      tags: init

    - block:
        - name: Generate locales
          locale_gen:
            name: '{{ item }}'
            state: present
          with_items: [en_US.UTF-8, ru_RU.UTF-8, ru_RU.CP1251]

        - name: Configure APT
          block:
            - name: Add backports repository
              apt_repository:
                repo: deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main
                state: present
                filename: backports
            - name: Install software-properties-common
              apt:
                name: [software-properties-common]
                state: latest
                update_cache: true
            - name: enable contrib and non-free repo
              shell:
                cmd: |
                  apt-add-repository contrib
                  apt-add-repository non-free

        - name: Install core pkgs
          apt:
            name: '{{ debian_core_pkgs }}'
            state: latest
            update_cache: true
            install_recommends: false

        - name: Configure grub
          block:
            - name: Hide grub on startup
              lineinfile:
                dest: /etc/default/grub
                regexp: ^GRUB_CMDLINE_LINUX_DEFAULT=
                line: GRUB_CMDLINE_LINUX_DEFAULT="quiet splash raid=noautodetect"
                state: present
            - name: Set default cmdline entries
              lineinfile:
                dest: /etc/default/grub
                regexp: ^GRUB_TIMEOUT=
                line: GRUB_TIMEOUT=0
                state: present
            - name: Update grub config
              command: update-grub

        - name: Configure LightDM
          block:
            - name: Create LightDM config dir
              file:
                path: /etc/lightdm/lightdm.conf.d
                state: directory
                mode: 0755
            - name: Apply LightDM config
              copy:
                src: '{{ system_conf_path }}/lightdm/lightdm.conf'
                dest: /etc/lightdm/lightdm.conf.d/01-default.conf
                mode: 0644
            - name: Apply LightDM config
              copy:
                src: '{{ system_conf_path }}/lightdm/lightdm-gtk-greeter.conf'
                dest: /etc/lightdm/lightdm-gtk-greeter.conf
                mode: 0644

        - name: Config xorg
          block:
            - name: Create xorg config dir
              file:
                path: /etc/X11/xorg.conf.d
                state: directory
                mode: 0755
            - name: Apply xorg config
              copy:
                src: '{{ system_conf_path }}/xorg/{{ item }}.conf'
                dest: /etc/X11/xorg.conf.d/{{ item }}.conf
                mode: 0644
              with_items: [20-intel, 30-touchpad]

        - name: Config sysctl
          blockinfile:
            block: "{{ lookup('file', '{{ system_conf_path }}/sysctl.conf') }}"
            path: /etc/sysctl.d/99-sysctl.conf

        - name: Install base pkgs
          apt:
            name: '{{ debian_base_pkgs }}'
            state: latest
            update_cache: true

        - name: Enable TLP
          service:
            name: tlp
            state: started
            enabled: true

      become: true
      when: ansible_distribution=="Debian"
      tags: init
