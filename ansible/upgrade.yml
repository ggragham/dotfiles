---
- name: Upgrade Linux system
  hosts: localhost

  tasks:
    # Built-in package manager
    - name: Upgrade distro
      block:
        - name: Update and upgrade packages
          package:
            name: '*'
            state: latest

        - name: Autoremove unneeded packages (Debian based)
          apt:
            autoremove: true
          when: ansible_os_family == "Debian"

        - name: Autoremove unneeded packages (Red Hat based)
          dnf:
            autoremove: true
          when: ansible_os_family == "RedHat"

      become: true

    # Flatpak
    - name: Update Flatpak Packages
      block:
        - name: Check if Flatpak is installed
          shell: which flatpak
          register: flatpak
          ignore_errors: true

        - name: Update Flatpak PKGs
          shell: flatpak update -y
          when: flatpak.rc == 0

        - name: Remove unused Flatpak runtimes
          shell: flatpak uninstall --unused --delete-data -y
          when: flatpak.rc == 0

    # Oh My ZSH
    - name: Update Oh My ZSH
      block:
        - name: Check if oh-my-zsh upgrade script exists
          stat:
            path: "{{ lookup('env', 'ZSH') }}/oh-my-zsh.sh"
          register: oh_my_zsh

        - name: Update oh-my-zsh
          shell: sh "{{ lookup('env', 'ZSH') }}/tools/upgrade.sh"
          when: oh_my_zsh.stat.exists

        - name: Update Oh My ZSH custom plugins
          block:
            - name: Get list of custom plugin directories
              find:
                paths: "{{ lookup('env', 'ZSH') }}/custom/plugins"
                file_type: directory
              register: plugin_dirs
            - name: Exclude 'example' directory from plugins
              set_fact:
                plugin_dirs: "{{ plugin_dirs.files | rejectattr('path', 'search', 'example') | list }}"
            - name: Update custom plugins
              shell: git -C "{{ item.path }}" pull
              with_items: '{{ plugin_dirs }}'

        - name: Update Oh My ZSH custom themes
          block:
            - name: Get list of custom theme directories
              find:
                paths: "{{ lookup('env', 'ZSH') }}/custom/themes"
                file_type: directory
              register: theme_dirs
            - name: Update custom themes
              shell: git -C "{{ item.path }}" pull
              with_items: '{{ theme_dirs.files }}'

